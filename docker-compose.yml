version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: doc-management-postgres
    environment:
      POSTGRES_DB: DocManagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456a@A
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - doc-management-network

  backend:
    image: dockerhub.ospgroup.vn/osp-public/sohoa-app-be:latest
    container_name: doc-management-backend
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=DocManagement;Username=postgres;Password=123456a@A
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - doc-management-network

  frontend:
    image: dockerhub.ospgroup.vn/osp-public/sohoa-app-fe:latest
    container_name: doc-management-frontend
    ports:
      - "4200:80"
    environment:
      - API_URL=http://localhost:5001
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - doc-management-network

volumes:
  postgres_data:
    driver: local

networks:
  doc-management-network:
    driver: bridge